{"version":3,"sources":["webpack:///./src/components/social.js","webpack:///./src/pages/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/image.js"],"names":["Logo","posed","a","exit","x","opacity","enter","delay","delta","Social","style","isPopped","className","key","href","filename","alt","Title","h1","init","y","popped","transition","duration","LightGreyDiv","div","Subtitle","h2","WhiteDiv","IndexPage","state","appHeight","componentWillUnmount","window","removeEventListener","componentDidMount","this","setState","innerHeight","addEventListener","render","title","keywords","minHeight","pose","marginTop","marginLeft","margin","React","Component","Layout","children","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","StaticQueryContext","loader","enqueue","createContext","StaticQueryDataRenderer","staticQueryData","data","query","finalData","Fragment","StaticQuery","props","Consumer","Image","image","images","edges","find","n","node","relativePath","includes","imageSizes","childImageSharp","sizes"],"mappings":"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","file":"component---src-pages-index-js-8f7a365d5f5328892cf3.js","sourcesContent":["import React from \"react\"\nimport posed, { PoseGroup } from \"react-pose\"\n\nimport Image from \"./image\"\n\nconst Logo = posed.a({\n  exit: {\n    x: 100,\n    opacity: 0,\n  },\n  enter: {\n    x: 0,\n    opacity: 1,\n    delay: ({ delta }) => 750 + delta * 50,\n  },\n})\n\nconst Social = ({ style, isPopped }) => (\n  <div style={style} className=\"social\">\n    <PoseGroup>\n      {isPopped && [\n        <Logo\n          delta={1}\n          key=\"github\"\n          className=\"image logo\"\n          href=\"https://github.com/gotokatsuya\"\n        >\n          <Image filename=\"logo-github.png\" alt=\"logo-github\" />\n        </Logo>,\n        <Logo\n          delta={2}\n          key=\"note\"\n          className=\"image logo is-circle\"\n          href=\"https://note.mu/gotokatsuya\"\n        >\n          <Image filename=\"logo-note.jpg\" alt=\"logo-note\" />\n        </Logo>,\n        <Logo\n          delta={3}\n          key=\"twitter\"\n          className=\"image logo\"\n          href=\"https://twitter.com/goka_kun\"\n        >\n          <Image filename=\"logo-tw.png\" alt=\"logo-tw\" />\n        </Logo>,\n        <Logo\n          delta={4}\n          key=\"facebook\"\n          className=\"image logo\"\n          href=\"https://www.facebook.com/katsuya.goto.5\"\n        >\n          <Image filename=\"logo-fb.png\" alt=\"logo-fb\" />\n        </Logo>,\n      ]}\n    </PoseGroup>\n  </div>\n)\n\nexport default Social\n","import React from \"react\"\nimport posed from \"react-pose\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Social from \"../components/social\"\n\nconst Title = posed.h1({\n  init: { y: `25vh`, opacity: 0 },\n  popped: {\n    y: 0,\n    opacity: 1,\n    delay: 100,\n    transition: { duration: 300 },\n  },\n})\n\nconst LightGreyDiv = posed.div({\n  init: { y: `50vh`, opacity: 0 },\n  popped: {\n    y: 0,\n    opacity: 1,\n    delay: 200,\n    transition: { duration: 300 },\n  },\n})\n\nconst Subtitle = posed.h2({\n  init: { y: `50vh`, opacity: 0 },\n  popped: {\n    y: 0,\n    opacity: 1,\n    delay: 300,\n    transition: { duration: 300 },\n  },\n})\n\nconst WhiteDiv = posed.div({\n  init: { y: `214px`, opacity: 0 },\n  popped: {\n    y: 0,\n    opacity: 1,\n    delay: 600,\n    transition: { duration: 300 },\n  },\n})\n\nclass IndexPage extends React.Component {\n  state = { isPopped: false, appHeight: 0 }\n  componentDidMount() {\n    this.setState({ isPopped: true, appHeight: window.innerHeight })\n    window.addEventListener(\"resize\", () => {\n      this.setState({ appHeight: window.innerHeight })\n    })\n  }\n  componentWillUnmount = () => window.removeEventListener(\"resize\")\n  render() {\n    return (\n      <Layout>\n        <SEO title=\"KATSUYA GOTO\" keywords={[`gotokatsuya`]} />\n        <div className=\"index\" style={{ minHeight: this.state.appHeight }}>\n          <div className=\"bottom\" />\n          <LightGreyDiv\n            pose={this.state.isPopped ? \"popped\" : \"\"}\n            className=\"right-bottom\"\n          >\n            <Subtitle\n              pose={this.state.isPopped ? \"popped\" : \"\"}\n              style={{\n                marginTop: `-20px`,\n                marginLeft: `-40px`,\n              }}\n              className=\"text has-white\"\n            >\n              ENGINEER\n            </Subtitle>\n            <WhiteDiv className=\"white\">\n              <Social\n                style={{ margin: `12px` }}\n                isPopped={this.state.isPopped}\n              />\n            </WhiteDiv>\n          </LightGreyDiv>\n          <Title\n            pose={this.state.isPopped ? \"popped\" : \"\"}\n            style={{ marginLeft: `12px` }}\n            className=\"title text is-large has-white\"\n          >\n            KATSUYA GOTO\n          </Title>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default IndexPage\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport \"./../styles/layout.scss\"\n\nconst Layout = ({ children }) => (\n  <div>\n    <main className=\"layout\">{children}</main>\n  </div>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = ({ filename, alt }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile {\n          edges {\n            node {\n              relativePath\n              name\n              childImageSharp {\n                sizes(maxWidth: 1200) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const image = data.images.edges.find(n => {\n        return n.node.relativePath.includes(filename)\n      })\n      if (!image) {\n        return null\n      }\n      const imageSizes = image.node.childImageSharp.sizes\n      return <Img alt={alt} sizes={imageSizes} />\n    }}\n  />\n)\n\nImage.propTypes = {\n  filename: PropTypes.string,\n  alt: PropTypes.string,\n}\n\nImage.defaultProps = {\n  filename: ``,\n  alt: ``,\n}\n\nexport default Image\n"],"sourceRoot":""}