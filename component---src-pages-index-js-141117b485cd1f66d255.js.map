{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/image.js","webpack:///./src/pages/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["StaticQueryContext","React","createContext","StaticQuery","props","react_default","a","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","Image","_ref","filename","alt","gatsby_browser_entry_StaticQuery","image","images","edges","find","n","node","relativePath","includes","imageSizes","childImageSharp","sizes","gatsby_image_default","_3195325893","defaultProps","IndexPage","layout","seo","title","keywords","className","renderprops","from","opacity","to","config","tension","friction","delay","style","components_image","marginTop","href","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","Layout","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","arrayOf","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-index-js-141117b485cd1f66d255.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = ({ filename, alt }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile {\n          edges {\n            node {\n              relativePath\n              name\n              childImageSharp {\n                sizes(maxWidth: 1200) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const image = data.images.edges.find(n => {\n        return n.node.relativePath.includes(filename)\n      })\n      if (!image) {\n        return null\n      }\n      const imageSizes = image.node.childImageSharp.sizes\n      return <Img alt={alt} sizes={imageSizes} />\n    }}\n  />\n)\n\nImage.propTypes = {\n  filename: PropTypes.string,\n  alt: PropTypes.string,\n}\n\nImage.defaultProps = {\n  filename: ``,\n  alt: ``,\n}\n\nexport default Image\n","import React from \"react\"\nimport { Spring } from 'react-spring/renderprops'\n\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\n\nclass IndexPage extends React.Component {\n\n  render() {\n    return (\n      <Layout>\n        <SEO title=\"ME\" keywords={[`gotokatsuya`]} />\n        <section className=\"hero is-fullheight\">\n          <div className=\"hero-body\">\n            <div className=\"container has-text-centered\">\n              <Spring\n                from={{ opacity: 0 }}\n                to={{ opacity: 1 }}\n                config={{ tension: 280, friction: 120, delay: 600 }}>\n                {props =>\n                  <div style={props}>\n                    <div className=\"image profile is-circle\">\n                      <Image filename=\"profile.jpg\" alt=\"profile\" />\n                    </div>\n                    <div style={{ marginTop: `30px` }}>\n                      <h1 className=\"title is-1\">KATSUYA GOTO</h1>\n                    </div>\n                  </div>\n                }\n              </Spring>\n              <div style={{ marginTop: `40px` }} className=\"d-flex has-gap is-centered\">\n                <Spring\n                  from={{ opacity: 0 }}\n                  to={{ opacity: 1 }}\n                  config={{ tension: 280, friction: 120, delay: 600 }}>\n                  {props =>\n                    <div style={props} >\n                      <a className=\"image sns-logo\" href=\"https://github.com/gotokatsuya\">\n                        <Image filename=\"github-logo.png\" alt=\"github-logo\" />\n                      </a>\n                      <a className=\"image sns-logo\" href=\"https://twitter.com/goka_kun\">\n                        <Image filename=\"tw-logo-2.png\" alt=\"tw-logo\" />\n                      </a>\n                      <a className=\"image sns-logo\" href=\"https://www.facebook.com/katsuya.goto.5\">\n                        <Image filename=\"fb-logo.png\" alt=\"fb-logo\" />\n                      </a>\n                    </div>\n                  }\n                </Spring>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Layout >\n    )\n  }\n}\n\nexport default IndexPage\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport \"./../styles/layout.scss\"\n\nconst Layout = ({ children }) => (\n  <div>\n    <main>{children}</main>\n  </div>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}